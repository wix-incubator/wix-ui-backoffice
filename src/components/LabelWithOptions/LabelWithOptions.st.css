:import {
  -st-from: "wix-ui-core/dist/src/components/LabelWithOptions/LabelWithOptions.st.css";
  -st-default: LabelWithOptions;
}

:import {
  -st-from: "../../palette.st.css";
  -st-named: primaryText, mainHover, main, disabledText, inputHover, inputDisabledColor, inputDisabledHoverBorderColor, primaryLightText, inputBorderColor, inputDisabledBorderColor, danger, backgroundSecondary, inputBackground, dropdownShadow;
}

:import {
  -st-from: "../Input/Input.st.css";
  -st-default: Input;
}

:import {
  -st-from: "../../typography.st.css";
  -st-named: fontRoman;
}

:import {
    -st-from: "../Input/InputStates.st.css";
    -st-named: largeFont, medFont, smallFont, largeHeight, medHeight, smallHeight;
}

:import {
  -st-from: "wix-ui-core/dist/src/mixins/calc";
  -st-default: calc;
}

:import {
  -st-from: "../Checkbox/Checkbox.st.css";
  -st-default: Checkbox;
}

:vars {
  arrowIconSize: 24px;
}

.root {
  -st-extends: LabelWithOptions;
  -st-states: size(enum(large, medium, small));
  font-family: value(fontRoman);
  width: 100%;
}

/*Selection*/

.root::selection {
  background-color: value(inputBackground);
  border-radius: 6px;
  border: 1px solid value(inputBorderColor);
  padding: 0 12px;
  outline: none;
  width: 100%;
  display: flex;
}

.root:error::selection {
  border-color: value(danger); 
}

.root:disabled::selection {
  color: value(inputDisabledColor);
  border-color: value(inputDisabledBorderColor);

}

.root:disabled:hover::selection {
  background-color: value(inputBackground);
  border-color: value(inputDisabledHoverBorderColor);
}

/*Label*/

.root::label {
  width: 100%;
  cursor: pointer;
}

.root:disabled::label {
  cursor: default;
}

.root:size(large)::label {
  min-height: value(largeHeight);
  line-height: calc(value(largeHeight) - 2px);
  font-size: value(largeFont);
}

.root:size(medium)::label {
  min-height: value(medHeight);
  line-height: calc(value(medHeight) - 2px);
  font-size: value(medFont);
}

.root:size(small)::label {
  min-height: value(smallHeight);
  line-height: calc(value(smallHeight) - 2px);
  font-size: value(smallFont);
}

.root::placeholder {
  color: value(disabledText);
}

/*Dropdown*/

.root::popoverContent {
  border: none;
  border-radius: 8px;
  box-shadow: value(dropdownShadow);
  width: 100%;
  overflow: hidden;
}

/*Dropdown Option*/

.root::dropdownContent::dropdownOption {
  white-space: nowrap;
  padding: 8px 24px;
  text-overflow: ellipsis;
  font-size: 16px;
  color: value(primaryText);
  overflow: hidden;
}

.root::optionCotainer {
  align-items: center;
}


.root::dropdownContent::dropdownOption:hovered {
  background: value(inputHover);
}

.root::dropdownContent::dropdownOption:selected:not(:checkbox) {
  background: value(main);
  color: value(primaryLightText);
}

.root::dropdownContent::dropdownOption:selected:hovered:not(:checkbox) {
  background: value(mainHover);
  color: value(primaryLightText);
}

.root::dropdownContent::dropdownOption:disabled {
  color: value(disabledText);
}

.root::dropdownContent::dropdownOption:not(:selectable) {
  padding: 0;
}

.root::checkbox {
  -st-mixin: Checkbox;
  border: unset;
  margin-right: 12px;
}
.root::checkbox:checked {
  background: unset;
}

/*TODO*/
/*:global([dir="rtl"]) .root::checkbox {*/
  /*margin-left: 12px;*/
/*}*/

/*.myCheckbox {*/
  /*-st-mixin: Checkbox;*/
  /*border: unset;*/
/*}*/

/*:global([dir="rtl"]) .myCheckbox {*/
  /*margin-right: unset;*/
  /*margin-left: 12px;*/
/*}*/


/*Divider*/

.root::divider {
  background-color: #e5e5e5;
  display: flex;
  flex: 1;
}

.root::divider:customDivider {
  padding: 8px 20px;
}

/*Arrow icon*/
.root:size(large) .arrowIconSlot {
  margin-top: calc(calc(value(largeHeight) - value(arrowIconSize)) / 2);
}

.root:size(medium) .arrowIconSlot {
  margin-top: calc(calc(value(medHeight) - value(arrowIconSize)) / 2);
}

.root:size(small) .arrowIconSlot {
  margin-top: calc(calc(value(smallHeight) - value(arrowIconSize)) / 2);
}

.arrowIcon {
  width: value(arrowIconSize);
  height: value(arrowIconSize);
  fill: value(inputBorderColor);
}

.root:disabled .arrowIcon {
  fill: value(inputDisabledBorderColor);
}

.root:disabled:hover .arrowIcon {
  fill: value(inputDisabledHoverBorderColor);
}
